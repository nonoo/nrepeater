AC_INIT(nrepeater, 0.1.1)
AM_INIT_AUTOMAKE
AC_HEADER_STDC
AC_PROG_CXX
AC_LANG_CPLUSPLUS
dnl AC_CHECK_LIB([socket], [bind])
dnl AC_CHECK_LIB([nsl], [inet_addr])
dnl AC_CHECK_LIB([resolv], [gethostbyname2_r])


AC_ARG_ENABLE(debug,
    AC_HELP_STRING([--enable-debug],[enable debugging (default is NO)]),
[
    CXXFLAGS="-g -Wall -O0"
    AC_DEFINE([DEBUG], [1], [Are we debugging?])
],
[
    CXXFLAGS="-Wall -O3"
])



dnl checking needed libs

dnl AC_ARG_WITH(rudeconfig-dir,
dnl     AC_HELP_STRING([--with-rudeconfig-dir=PATH],[path to librudeconfig installation]),
dnl [
dnl     CXXFLAGS="$CXXFLAGS -I${withval}/include"
dnl     LDFLAGS="$LDFLAGS -L${withval}/lib"
dnl     if test -n "${need_dash_r}"; then
dnl 	LDFLAGS="$LDFLAGS -R${withval}/lib"
dnl     fi
dnl ])
AC_ARG_WITH(sndfile-dir,
    AC_HELP_STRING([--with-sndfile-dir=PATH],[path to libsndfile installation]),
[
    CXXFLAGS="$CXXFLAGS -I${withval}/include"
    LDFLAGS="$LDFLAGS -L${withval}/lib"
    if test -n "${need_dash_r}"; then
	LDFLAGS="$LDFLAGS -R${withval}/lib"
    fi
])
AC_ARG_WITH(parapin-dir,
    AC_HELP_STRING([--with-parapin-dir=PATH],[path to libparapin installation]),
[
    CXXFLAGS="$CXXFLAGS -I${withval}/include"
    LDFLAGS="$LDFLAGS -L${withval}/lib"
    if test -n "${need_dash_r}"; then
	LDFLAGS="$LDFLAGS -R${withval}/lib"
    fi
])
AC_ARG_WITH(speex-dir,
    AC_HELP_STRING([--with-speex-dir=PATH],[path to libspeex installation]),
[
    CXXFLAGS="$CXXFLAGS -I${withval}/include"
    LDFLAGS="$LDFLAGS -L${withval}/lib"
    if test -n "${need_dash_r}"; then
	LDFLAGS="$LDFLAGS -R${withval}/lib"
    fi
])
AC_ARG_WITH(ogg-dir,
    AC_HELP_STRING([--with-ogg-dir=PATH],[path to libogg installation]),
[
    CXXFLAGS="$CXXFLAGS -I${withval}/include"
    LDFLAGS="$LDFLAGS -L${withval}/lib"
    if test -n "${need_dash_r}"; then
	LDFLAGS="$LDFLAGS -R${withval}/lib"
    fi
])
AC_ARG_WITH(samplerate-dir,
    AC_HELP_STRING([--with-samplerate-dir=PATH],[path to libsamplerate installation]),
[
    CXXFLAGS="$CXXFLAGS -I${withval}/include"
    LDFLAGS="$LDFLAGS -L${withval}/lib"
    if test -n "${need_dash_r}"; then
	LDFLAGS="$LDFLAGS -R${withval}/lib"
    fi
])

dnl AC_MSG_CHECKING([for librudeconfig])
dnl LIBS="$LIBS -lrudeconfig"
dnl AC_LINK_IFELSE([
dnl     AC_LANG_PROGRAM([[
dnl 	#include <rude/config.h>
dnl     ]],[[
dnl 	rude::Config c;
dnl     ]])
dnl     ],[
dnl     AC_MSG_RESULT([yes])
dnl     ],[
dnl     echo "You need to have librudeconfig installed on your system!"
dnl     echo "You can download it from http://www.rudeserver.com/"
dnl     echo
dnl     echo "Or you can specify librudeconfig installation directory this way:"
dnl     echo "./configure --with-rudeconfig-dir=PATH"
dnl     echo
dnl     exit
dnl ])
AC_CHECK_LIB([sndfile], [sf_open], [], [
    echo
    echo "You need to have libsndfile installed on your system!"
    echo "You can download it from http://www.mega-nerd.com/libsndfile/"
    echo
    echo "Or you can specify libsndfile installation directory this way:"
    echo "./configure --with-libsndfile-dir=PATH"
    echo
    exit
])
AC_CHECK_LIB([parapin], [pin_init_user], [], [
    echo
    echo "You need to have libparapin installed on your system!"
    echo "You can download it from http://sourceforge.net/projects/parapin/"
    echo
    echo "Or you can specify libparapin installation directory this way:"
    echo "./configure --with-parapin-dir=PATH"
    echo
    exit
])
AC_CHECK_LIB([speex], [speex_encoder_init], [], [
    echo
    echo "You need to have libspeex installed on your system!"
    echo "You can download it from http://www.speex.org/"
    echo
    echo "Or you can specify libspeex installation directory this way:"
    echo "./configure --with-speex-dir=PATH"
    echo
    exit
])
AC_CHECK_LIB([ogg], [ogg_stream_packetin], [], [
    echo
    echo "You need to have libogg installed on your system!"
    echo "You can download it from http://www.xiph.org/"
    echo
    echo "Or you can specify libogg installation directory this way:"
    echo "./configure --with-ogg-dir=PATH"
    echo
    exit
])
AC_CHECK_LIB([samplerate], [src_simple], [], [
    echo
    echo "You need to have libsamplerate installed on your system!"
    echo "You can download it from http://www.mega-nerd.com/SRC/"
    echo
    echo "Or you can specify libogg installation directory this way:"
    echo "./configure --with-samplerate-dir=PATH"
    echo
    exit
])



dnl #######
AC_OUTPUT(Makefile src/Makefile conf/Makefile)

AC_MSG_RESULT()
AC_MSG_RESULT([WOOOOOOOO success! ;)])
AC_MSG_RESULT(Now you can type make to compile nrepeater.)
AC_MSG_RESULT()
